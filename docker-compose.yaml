version: '3.8'
services:
  namesrv:
    image: registry.cn-hangzhou.aliyuncs.com/foxiswho/rocketmq:4.7.0
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    restart: always
    volumes:
      - /usr/local/docker/docker-rocketmq/rmq/rmqs/logs:/home/rocketmq/logs
      - /usr/local/docker/docker-rocketmq/rmq/rmqs/store:/home/rocketmq/store
    environment:
      JAVA_OPT_EXT: "-Duser.home=/home/rocketmq -Xms1024M -Xmx1024M -Xmn256m"
    command: [ "sh","mqnamesrv" ]

  broker:
    image: registry.cn-hangzhou.aliyuncs.com/foxiswho/rocketmq:4.7.0
    container_name: rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
    restart: always
    volumes:
      - /usr/local/docker/docker-rocketmq/rmq/rmq/logs:/home/rocketmq/logs
      - /usr/local/docker/docker-rocketmq/rmq/rmq/store:/home/rocketmq/store
      - /usr/local/docker/docker-rocketmq/rmq/rmq/brokerconf/broker.conf:/etc/rocketmq/broker.conf
    environment:
      JAVA_OPT_EXT: "-Duser.home=/home/rocketmq -Xms512M -Xmx512M -Xmn128m"
    command: [ "sh","mqbroker","-c","/etc/rocketmq/broker.conf","-n","192.168.1.107:9876","autoCreateTopicEnable=true" ]
    depends_on:
      - namesrv

  mqconsole:
    image: styletang/rocketmq-console-ng
    container_name: rmqdashboard
    ports:
      - 8180:8080
    restart: always
    environment:
      JAVA_OPTS: "-Drocketmq.namesrv.addr=192.168.1.107:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"
    depends_on:
      - namesrv


  mysql:
    image: mysql:8.0 # https://hub.docker.com/_/mysql/
    container_name: mysql
    restart: always #  指定了容器的重启策略，除了手动停止容器，其他情况都自动重启容器
    environment:
      - TZ=Asia/Shanghai # 指定了容器的环境变量，设置容器的时区为上海时区
      - LANG=en_US.UTF-8 # 指定了容器的环境变量，设置容器的编码为UTF-8
      - MYSQL_ROOT_HOST='%'
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - 3306:3306
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - /usr/local/docker/mysql/log:/var/log/mysql # 映射日志目录，宿主机:容器
      - /usr/local/docker/mysql/data:/var/lib/mysql # 映射数据目录，宿主机:容器
      - /usr/local/docker/mysql/conf.d:/etc/mysql/conf.d # 映射配置目录，宿主机:容器


  redis:
    # 镜像名
    image: redis:6.2.0
    # 容器名
    container_name: redis
    # 重启策略
    restart: always
    # 端口映射
    ports:
      - 6379:6379
    environment:
      # 设置环境变量 时区上海 编码UTF-8
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
    command:
      - /redis.conf
    volumes:
      # 配置文件
      - /usr/local/docker/redis/conf/redis.conf:/redis.conf:rw
      # 数据文件
      - /usr/local/docker/redis/data:/data:rw

  v1:
    build: .
    volumes:
      - ./config:/app/config
      - ./log:/app/log/:rw
      - ./views:/app/views
    depends_on:
      - mysql
      - namesrv
      - redis
    ports:
      - "5679:5679"
    restart: always
#    command: "./app"

#  dtm:
#    image: yedf/dtm
#    environment:
#      STORE_DRIVER: redis
#      STORE_HOST: localhost
#      STORE_USER: ''
#      STORE_PASSWORD: '13257888215'
#      STORE_PORT: 6379
#      STORE_DRIVER: mysql
#      STORE_HOST: mysql
#      STORE_USER: root
#      STORE_PASSWORD: 'root'
#      STORE_PORT: 3306
#    ports:
#      - '36789:36789'
#      - '36790:36790'
#    network_mode: host

#  zookeeper:
#    image: 'bitnami/zookeeper:latest'
#    ports:
#      - '2181:2181'
#    environment:
#      # 匿名登录--必须开启
#      - ALLOW_ANONYMOUS_LOGIN=yes
#    #volumes:
#    #- ./zookeeper:/bitnami/zookeeper
#    # 该镜像具体配置参考 https://github.com/bitnami/bitnami-docker-kafka/blob/master/README.md
#
#  kafka:
#    image: 'bitnami/kafka:2.8.0'
#    container_name: 'small-kafka'
#    ports:
#      - '9092:9092'
#      - '9999:9095'
#    environment:
#      - KAFKA_BROKER_ID=1
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
#      # 客户端访问地址，更换成自己的
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      # 允许使用PLAINTEXT协议(镜像中默认为关闭,需要手动开启)
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      # 关闭自动创建 topic 功能
#      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
#      # 全局消息过期时间 6 小时(测试时可以设置短一点)
#      - KAFKA_CFG_LOG_RETENTION_HOURS=6
#      # 开启JMX监控
#      # - JMX_PORT=9999
#    #volumes:
#    #- ./kafka:/bitnami/kafka
#    depends_on:
#      - zookeeper
#  # Web 管理界面 另外也可以用exporter+prometheus+grafana的方式来监控 https://github.com/danielqsj/kafka_exporter
#  kafka_manager:
#    image: 'hlebalbau/kafka-manager:latest'
#    ports:
#      - "9000:9000"
#    environment:
#      ZK_HOSTS: "zookeeper:2181"
#      APPLICATION_SECRET: letmein
#    depends_on:
#      - zookeeper
#      - kafka
